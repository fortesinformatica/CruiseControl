h1. External Source Control Configuration

A source control implementation for use when the source control system doesn't integrate directly with CCNet.  

h2. Version

Available from version 1.3

h2. Examples

{code:xml|borderStyle=solid|titleBGColor=#ADD6FF|title=Minimal Configuration}
<sourcecontrol type="external">
  <executable>path to command-line application</executable>
</sourcecontrol>
{code}
{code:xml|borderStyle=solid|titleBGColor=#ADD6FF|title=Full Example}
<sourcecontrol type="external">
  <executable>path to command-line application</executable>
  <args>arguments for the command-line application</args>
  <autoGetSource>false</autoGetSource>
  <labelOnSuccess>false</labelOnSuccess>
  <environment>
    <var>name=value</var>
    <var>name=value</var>
  </environment>
  <timeout units="minutes">10</timeout>
</sourcecontrol>
{code}


h2. Configuration Elements

|| Element || Description || Type || Required || Default || Version ||
| type | The type of source control block. | String - must be external | Yes | _n/a_ | 1.3 |
| args | A string to be passed to the external source control program in commands.  \\The string will be passed exactly as specified.  In particular, it will not be enclosed quotation marks, thus allowing you to specify what the executable will see as multiple parameters.   | String | No | _None_ | 1.3 |
| autoGetSource | Should we automatically obtain updated source from the source control system or not?   | Boolean | No | false | 1.3 |
| dynamicValues | The dynamic values to use for the source control block.   | [Dynamic Values] array | No | _None_ | 1.5 |
| environment | A set of environment variables set for commands that are executed.   | [Environment Variable] array | No | _None_ | 1.3 |
| executable | Name of the source control system executable to run.   | String | Yes | _n/a_ | 1.3 |
| issueUrlBuilder | Converts the comment (or parts from it) into an url pointing to the issue for this build. See [IssueUrlBuilder] for more details.   | [IssueUrlBuilder] | No | _None_ | 1.4 |
| labelOnSuccess | If set, the source repository will be tagged with the build label upon successful builds.   | Boolean | No | false | 1.3 |
| timeout | Sets the timeout period for the source control operation. See [Timeout Configuration] for details.   | [Timeout Configuration] | No | 10 minutes | 1.3 |

h2. Notes

Each of the three sourcecontrol operations (GetModifications(), GetSource(), and LabelSourceControl()) are passed to the source control command as a command line.  
h4. GetModifications
The GetModifications function is invoked as the GETMODS operation, and specifying a starting and ending timestamp:  
{code:None|borderStyle=solid}

            executable GETMODS "fromtimestamp" "totimestamp" args
            
{code}
The source control command should search for modifications between these two times inclusively, write their details to the standard output stream in the XML format used by the [Modification Writer Task], and exit with exit status 0 (any other status indicates an error and will fail the build). For example, the following represents two modifications, numbered 12244 and 12245.  
{code:xml|borderStyle=solid}
<ArrayOfModification>
  <Modification>
    <ChangeNumber>12245</ChangeNumber>
    <Comment>New Project for testing stuff</Comment>
    <EmailAddress>JUser@Example.Com</EmailAddress>
    <FileName>AssemblyInfo.cs</FileName>
    <FolderName>Dev\Server\Interface\Properties\</FolderName>
    <ModifiedTime>2006-11-22T11:11:00-0500</ModifiedTime>
    <Type>add</Type>
    <UserName>joe_user</UserName>
    <Url>http://www.example.com/index.html</Url>
    <Version>5</Version>
  </Modification>
  <Modification>
    <ChangeNumber>12244</ChangeNumber>
    <Comment>New Project for accessing web services</Comment>
    <EmailAddress>SSpade@Example.Com</EmailAddress>
    <FileName>Interface</FileName>
    <FolderName>Dev\Server\</FolderName>
    <ModifiedTime>2006-11-22T11:10:44-0500</ModifiedTime>
    <Type>add</Type>
    <UserName>sam_spade</UserName>
    <Url>http://www.example.com/index.html</Url>
    <Version>4</Version>
  </Modification>
</ArrayOfModification>
{code}
h4. GetSource
The GetSource function is invoked as the GETSOURCE operation, and specifying a working directory path and the target timestamp:  
{code:None|borderStyle=solid}

            executable GETSOURCE "workingdirectory" "timestamp" args
            
{code}
The source control command should update the files in the specified working directory to the versions current as of the specified time stamp and exit with exit status 0 (any other status indicates an error and will fail the build).  
h4. LabelSourceControl
The LabelSourceControl function is invoked as the SETLABEL operation, and specifying a label to be applied and the target timestamp:  
{code:None|borderStyle=solid}

            executable SETLABEL "label" "sourcetimestamp" args
            
{code}
The source control command should add the label to source repository and exit with exit status 0 (any other status indicates an error and will fail the build).  
{warning}
Watch out for the comment tag, if this contains dodgy charatecters eg.: <   it will fail the getsource. Be sure to escape these characters.  So replace these with there XML equivalents : &amp;lt;  
Be careful of the <ModifiedTime>, this MUST be more than the fromtimestamp if it is <= then the modification will not be detected.  
You don't need the following parameters for this to work:  
* <Type />
* <FileName />
* <FolderName />
* <Version />
* <EmailAddress />
{warning}


{info:title=Automatically Generated}
Documentation generated on Saturday, 22 Jan 2011 at 12:14:17 AM
Using assembly version 1.6.7979.1
{info}
