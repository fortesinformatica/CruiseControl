h1. Multi Source Control Block

You can use the 'Multi' Source Control plugin to check for modifications from any number of source control repositories. You may want to do this if (for example) you want to build if the source for your project changes, or if the binaries your project depends on change (which may be stored on a file server).  

h2. Version

Available from version 1.0

h2. Examples

{code:xml|borderStyle=solid}
<sourcecontrol type="multi">
  <sourceControls>
    <filesystem>
      <!-- Check for changes in the latest 1.2 version of the server... -->
      <repositoryRoot>\\DistributionFileServer\Server\1.2.latest</repositoryRoot>
    </filesystem>
    <cvs>
      <!-- ...or in the source of the client project -->
      <executable>c:\tools\cvs-exe\cvswithplinkrsh.bat</executable>
      <workingDirectory>c:\localcvs\myproject\client</workingDirectory>
    </cvs>
  </sourceControls>
</sourcecontrol>
{code}


h2. Configuration Elements

|| Element || Description || Type || Required || Default || Version ||
| type | The type of source control block. | String - must be multi | Yes | _n/a_ | 1.0 |
| dynamicValues | The dynamic values to use for the source control block.   | [Dynamic Values] array | No | _None_ | 1.5 |
| requireChangesFromAll | If true, only return a list of modifications if all sourceControl sections return a non\-empty list. Note that this is short\-circuiting, i.e. if the first sourceControl returns an empty list, the next won't be called (this can be useful for situations where you have a slow source control server and you want to check a specific file first as a trigger).   | Boolean | No | false | 1.0 |
| sourceControls | The list of other Source Control Blocks to include.   | [Source Control Blocks] array | Yes | _n/a_ | 1.0 |

h2. Notes

Note that, due to the way the configuration gets parsed, if you are using a "multi" block, then the items within the <sourceControls> element should not be <sourcecontrol> elements (as you may expect). Instead, the name of the element should be the same as you would put in the "type" attribute when using a <sourcecontrol> element.  
For example, normally you would point to a cvs repository like this:  
{code:xml|borderStyle=solid}
<sourcecontrol type="cvs">
  <executable>c:\tools\cvs-exe\cvswithplinkrsh.bat</executable>
  <workingDirectory>c:\localcvs\myproject\client</workingDirectory>
</sourcecontrol>
{code}
But inside a <sourcecontrol type="multi"< element, this becomes:  
{code:xml|borderStyle=solid}
<sourcecontrol type="multi">
  <sourceControls>
    <cvs>
      <executable>c:\tools\cvs-exe\cvswithplinkrsh.bat</executable>
      <workingDirectory>c:\localcvs\myproject\client</workingDirectory>
    </cvs>
  </sourceControls>
</sourcecontrol>
{code}


{info:title=Automatically Generated}
Documentation generated on Saturday, 22 Jan 2011 at 12:14:18 AM
Using assembly version 1.6.7979.1
{info}
